symbols mac/2, getchallenge/0, errormac/0, Error6300/0, Error6A80/0, pair/2, fst/1, snd/1, sdec/2, senc/2;

channels c;
private ke, km, kr, nr, ntt, kt, ke2, km2, kr2, nr2, ntt2, kt2;

var X,Y,x,y,z,m,nnk,nt,x2,y2,z2,m2,nnk2,nt2;
rewrite fst(pair(X, Y)) -> X;
rewrite snd(pair(X, Y)) -> Y;
rewrite sdec(senc(X, Y), Y) -> X;



// Description of the reader role

 reader  =
//  out(c,getchallenge).
  in(c,nt).
  let m = senc( pair(pair(nr,nt),kr),ke) in
  out(c,pair(m,mac(m,km))).
//  in(c,z).
  0;

// Description of the passport role 

 passport =
  in(c,x).
  [ x = getchallenge ].
    out(c,ntt).
    in(c,y).
    if snd(y)=mac(fst(y),km) then 
	  let nnk = sdec(fst(y),ke) in
        if snd(fst(nnk)) = ntt then
      let m = senc(pair(pair(ntt,fst(fst(nnk))),kt),ke) in 
      out(c,pair(m,mac(m,km)))
      else 
      out(c,Error6300)
   else
    out(c,errormac);

// Description of the reader role

 reader2  =
//  out(c,getchallenge).
  in(c,nt2).
  let m2 = senc( pair(pair(nr2,nt2),kr2),ke) in
  out(c,pair(m2,mac(m2,km))).
  // in(c,z2).
  0;

// Description of the passport role 

 passport2 =
  in(c,x2).
  [ x2 = getchallenge ].
    out(c,ntt2).
    in(c,y2).  
    if snd(y2)=mac(fst(y2),km) then 
	  let nnk2 = sdec(fst(y2),ke) in
        if snd(fst(nnk2)) = ntt2 then
      let m2 = senc(pair(pair(ntt2,fst(fst(nnk2))),kt2),ke) in 
      out(c,pair(m2,mac(m2,km)))
     else
      out(c,Error6300)
	else
    out(c,errormac);

// Description of the reader role

 reader3  =
//  out(c,getchallenge).
  in(c,nt2).
  let m2 = senc( pair(pair(nr2,nt2),kr2),ke2) in
  out(c,pair(m2,mac(m2,km2))).
//  in(c,z2).
  0;

// Description of the passport role 

 passport3 =
  in(c,x2).
  [ x2 = getchallenge ].
    out(c,ntt2).
    in(c,y2).  
    if snd(y2)=mac(fst(y2),km2) then
	  let nnk2 = sdec(fst(y2),ke2) in
        if snd(fst(nnk2)) = ntt2 
      then 
      let m2 = senc(pair(pair(ntt2,fst(fst(nnk2))),kt2),ke2) in 
      out(c,pair(m2,mac(m2,km2)))
     else
      out(c,Error6300)
   else
    out(c,errormac);

// Unlinkability

 system1  =
((passport  || reader)  >> (passport2  || reader2));

 system2  =
((passport  || reader)  >> (passport3  || reader3));



equivalentct? system1 and system2 ; 
